{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28600\viewh14740\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Project1 Summary\
91.574\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Alex Pennace (alex@pennace.org)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Jason Braley (jasonbraley@gmail.com)\
\
\pard\pardeftab720
\cf0 The purpose of this assignment was to create code to implement the insertion routine of a B+ tree index structure. In addition, we were tasked with creating a scan structure that would go through the created structure and evaluate its correctness.\
\
The assignment consists of the given header and structure files as well as some new files that were created to fill out the functions defined in the header files.\
\
We started out by fleshing out the basic structure given in the header files. We then implemented the insertKey functions for both the BtreeIndex class and the BtreeLeaf class as well as the splitNode in the BtreeBuilder class. insertKey will take a given key and try to insert it into the given index structure. If this is not successful, it will return an error code. This error code forces the builder to split the node into two parts and insert a new key/ptr into the original node's parent. This code will also create a new index node if necessary. If that parent becomes full, we again split and insert a new key into that node's parent. This is written in a loop to continue until successful. \
\
When this appeared to be working correctly, we finished the implementation of the scan logic. The scan logic finds the position of a given key in the btree and iterates through the leaf nodes returning keys in sequential order until it hits a given end key or the end of the linked list of leaf nodes. \
\
We believe we completed this project 100% correctly. The code compiles and builds and completes execution with all successes. \
\
}